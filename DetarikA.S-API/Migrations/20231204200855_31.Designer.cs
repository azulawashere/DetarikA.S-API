// <auto-generated />
using System;
using DetarikA.S_API.Models.ContexClasses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DetarikA.S_API.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231204200855_31")]
    partial class _31
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Yaratılma Tarihi");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Baby",
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 410, DateTimeKind.Utc).AddTicks(9274),
                            Description = "Kapının türemiş nemo ötekinden çünkü magnam ekşili dolorem umut nostrum.",
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Home",
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 410, DateTimeKind.Utc).AddTicks(9759),
                            Description = "Ea karşıdakine filmini odio vitae makinesi aspernatur koyun ea ab.",
                            Status = 1
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Garden",
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 410, DateTimeKind.Utc).AddTicks(9888),
                            Description = "Quia kalemi anlamsız gülüyorum ullam eius teldeki gazete alias batarya.",
                            Status = 1
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Sports",
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(2),
                            Description = "Duyulmamış gül çünkü layıkıyla ullam bilgisayarı sequi voluptatum karşıdakine açılmadan.",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Dealer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Yaratılma Tarihi");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Dealers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyName = "AlfaTeam",
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(733),
                            ShippingAdress = "Istanbul Tahtakale Merkezzz",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Yaratılma Tarihi");

                    b.Property<int>("DealerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("ID");

                    b.HasIndex("DealerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Yaratılma Tarihi");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Yaratılma Tarihi");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(214),
                            ProductName = "Practical Plastic Sausages",
                            Status = 1,
                            UnitPrice = 576.25m
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(436),
                            ProductName = "Ergonomic Fresh Hat",
                            Status = 1,
                            UnitPrice = 550.52m
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(524),
                            ProductName = "Intelligent Soft Keyboard",
                            Status = 1,
                            UnitPrice = 738.05m
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 12, 4, 20, 8, 54, 411, DateTimeKind.Utc).AddTicks(607),
                            ProductName = "Unbranded Soft Sausages",
                            Status = 1,
                            UnitPrice = 355.92m
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Dealer", "Dealer")
                        .WithMany("Orders")
                        .HasForeignKey("DealerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DetarikA.S_API.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Dealer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
