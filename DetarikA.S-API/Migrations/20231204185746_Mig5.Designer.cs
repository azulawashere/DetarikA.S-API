// <auto-generated />
using System;
using DetarikA.S_API.Models.ContexClasses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DetarikA.S_API.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231204185746_Mig5")]
    partial class Mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Shoes",
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(2229),
                            Description = "Çorba beğendim türemiş gördüm sed öyle quasi aliquam doloremque nihil.",
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Automotive",
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(2564),
                            Description = "Bilgisayarı quia öyle layıkıyla et rem eum ipsum kulu patlıcan.",
                            Status = 1
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Industrial",
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(2654),
                            Description = "Ut neque düşünüyor voluptatem lambadaki alias dergi voluptatem şafak quasi.",
                            Status = 1
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Movies",
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(2718),
                            Description = "Fugit quae lakin et illo aut odit kapının quam doğru.",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Dealer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Dealers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyName = "AlfaTeam",
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(3180),
                            ShippingAdress = "Istanbul Tahtakale Merkezzz",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DealerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(2853),
                            ProductName = "Fantastic Cotton Gloves",
                            Status = 1,
                            UnitPrice = 803.25m
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(3018),
                            ProductName = "Awesome Cotton Shoes",
                            Status = 1,
                            UnitPrice = 723.56m
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(3054),
                            ProductName = "Incredible Fresh Mouse",
                            Status = 1,
                            UnitPrice = 804.86m
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 12, 4, 18, 57, 46, 446, DateTimeKind.Utc).AddTicks(3114),
                            ProductName = "Awesome Soft Salad",
                            Status = 1,
                            UnitPrice = 723.24m
                        });
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Dealer", "Dealer")
                        .WithMany("Orders")
                        .HasForeignKey("DealerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DetarikA.S_API.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.HasOne("DetarikA.S_API.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Dealer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DetarikA.S_API.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
